import { ProjectProps } from './projectCard/project.types'

export const allProjects: ProjectProps[] = [
  {
    id: 'project-5',
    tags: ['AWS(EC2)', '유지보수', '회사 프로젝트'],
    title: 'Rest API',
    subtitle: '기존에 구축되어 있는 Rest API를 유지보수 및 추가 기능 개발을 맡았어요.',
    challenge: '처음으로 AWS(EC2)',
    date: '2023. 06 ~ 2025. 07',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '유지보수 및 추가 기능 개발을 맡았어요.',

    children: (
      <>
        <h1>📌 주요 업무</h1>
        <h3>결과 페이지 비밀번호 기능 추가</h3>
        <ul>
          <li>
            기존에는 이메일로 송부한 주소에 접속하면 바로 확인할 수 있었는데, 고객의 요청에 따라
            패스워드를 생년월일로 설정하여 피부 정보가 담긴 페이지를 남이 열 수 없도록 기능을
            추가했어요.
          </li>
        </ul>
        <h3>자사 사이트 / 애플리케이션의 회원 탈퇴 기능 추가</h3>
        <ul>
          <li>
            함께 유지보수하고 있던 파트너 사이트 / 뷰티플레이스 애플리케이션의 회원 탈퇴 기능
            추가했어요.
          </li>
        </ul>
        <h3>자사 사이트의 아이템 그룹 복사 기능 추가</h3>
        <ul>
          <li>
            파트너사이트에서는 제품을 등록해서 그룹으로 묶을 수 있는 기능이 있는데, 고객의 요청에
            따라 이 그룹의 복사 기능을 추가했어요
          </li>
        </ul>
        <h1>💡 프로젝트를 통해 얻은 경험</h1>
        <h3>AWS EC2 접속 및 파일 전송 경험</h3>
        <ul>
          <li>
            개발 환경이 <code>AWS EC2</code> 기반이었기 때문에 서버에 파일을 전송하거나 수정하기
            위해 <code>WinSCP</code>를 사용했어요. 처음에는 보안 키 등을 설정하는 서버 접근 방식이
            익숙하지 않아 어려움이 있었지만, 점차 WinSCP와 EC2 키페어 설정 방식, 퍼미션 설정 등에
            익숙해졌어요.
          </li>
        </ul>
        <h3>DBeaver를 통한 데이터베이스 접근 및 수정 경험</h3>
        <ul>
          <li>
            기존에 <code>MySQL Workbench 8.0 CE</code>를 이용한 경험이 있어 금방 익숙해졌어요. 실제
            회사에서 운영하는 DB의 데이터들이 어떻게 관리되는지 알 수 있었고, 데이터에 접근하고
            쿼리를 작성해 보며 SQL 구조에 대한 이해도를 높일 수 있었어요.
          </li>
        </ul>

        <h3>이미지 데이터를 S3에 업로드하고 경로를 연동</h3>
        <ul>
          <li>
            고객의 피부 사진 결과 데이터를 업로드하는 기능을 유지보수하면서 <code>AWS S3</code>를
            활용하게 되었고, 퍼블릭 접근 권한, 버킷 정책, 파일 경로 지정 방식 등을 새롭게 익혔어요.
          </li>
        </ul>

        <h3>결과 페이지에서 이미지 주소를 직접 노출하지 않도록 처리하는 로직</h3>
        <ul>
          <li>
            S3에 업로드된 이미지의 경로가 <code>bucket 이름</code>을 포함하여 노출되고 있었어요. php
            파일이라 따로 분리하기 어려워, 이를 직접 노출하지 않기 위해 <code>image.php</code>{' '}
            파일을 따로 만들어 로직을 분리했어요. 이 작업을 통해 보안을 강화하고, 사용자에게
            안전하게 데이터를 제공하는 방법을 익혔어요.
          </li>
        </ul>
        <h3>twig 사용 경험</h3>
        <ul>
          <li>
            프론트엔드 페이지는 <code>Twig</code>로 구현되어 있어, PHP 파일과 Twig 템플릿 엔진을
            함께 사용하는 방법을 배웠어요. 이를 통해 동적 페이지 렌더링과 템플릿 관리 방식을 익히고,
            효율적인 프론트엔드 개발에 대한 경험을 쌓을 수 있었어요.
          </li>
        </ul>
        <h1>🚀 주요 성과 및 효과</h1>
        <ul>
          <li>
            고객 요청 사항을 빠르게 반영함으로써 기업 신뢰도 향상 및 파트너 만족도 증가했어요.
          </li>
          <li>
            기존 API의 보안 강화 및 유지보수 편의성을 확보하여 장기적인 시스템 안정성 확보했어요.
          </li>
        </ul>
      </>
    ),
  },
  {
    id: 'project-4',
    tags: ['회사 프로젝트'],
    title: '빅데이터 분석 및 관리',
    subtitle:
      '자사 보유 빅데이터를 활용한 내부 분석 신뢰도 향상 및 사내 데이터 이해도 증진을 위해 데이터 분석 및 사내 교육 기획·진행했어요.',
    challenge: '처음으로 빅데이터 분석',
    date: '2023. 06 ~ 2025. 07',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '유지보수 및 추가 기능 개발을 맡았어요.',

    children: (
      <>
        <h1>📌 주요 업무</h1>
        <h3>자사 빅데이터 기반 분석 수행</h3>
        <ul>
          <li>
            자사 프로그램의 수치를 신뢰할 수 있도록 연령별로 각 컬럼의{' '}
            <b>최대값, 최소값, 평균값 을 도출</b>하고, 이를 기반으로 분석 정확도를 높였어요.
          </li>
          <li>
            빅데이터를 최신화함으로써 <b>자사 점수 시스템의 신뢰성과 타당성 개선에 기여</b>했어요.
          </li>
        </ul>
        <h3>사내 빅데이터 교육 진행</h3>
        <ul>
          <li>
            개발팀 외 직원들도 자사 데이터를 더 잘 이해할 수 있도록, 자사 빅데이터의 구조와 활용
            사례를 중심으로 사내 교육을 기획하고 직접 강의했어요.
          </li>
          <li>
            실생활 질문에 기반한 데이터 시각화 예시(예: 계절별 수분 변화, 피부 타입별 주름 차이)를
            통해, 빅데이터 분석이 어떻게 실질적 인사이트로 이어지는지 이해를 도왔어요.
          </li>
        </ul>

        <h1>🚀 주요 성과 및 효과</h1>
        <ul>
          <li>
            기존에는 데이터와 관련된 문의로 개발팀에 방문하는 직원이 많았으나,{' '}
            <b>교육과 자료 배포 이후 관련 문의가 크게 감소</b>하며 사내 효율성 향상에 기여했어요.
          </li>
          <li>
            단순한 데이터 분석에 그치지 않고,{' '}
            <b>데이터를 기반으로 실질적인 문제점을 도출하고 개선 방안을 제시</b>한 경험은 이후
            다양한 업무의 기반이 됐어요.
          </li>
        </ul>
      </>
    ),
  },
  {
    id: 'project-3',
    tags: ['AWS(RDS)', 'PHP', '사이드 프로젝트'],
    title: '자동차 운전 환경 제어 시스템',
    subtitle:
      '파이썬 OpenCV의 사용 경험과 숙련도를 높이기 위해 교육 과정 중 만든 5 인 프로젝트예요.',
    challenge: '처음으로 AWS(RDS), PHP',
    date: '2022. 10. 17. - 2022. 11. 11.',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '서버 및 DB 관리를 맡았어요.',

    children: (
      <>
        <h1>👥 팀원</h1>
        <ul>
          <li>서버 및 DB 관리 1인</li>
          <li>아두이노 4인</li>
        </ul>
        <h1>📌 주요 업무</h1>
        <ul>
          <li>MySQL 기반의 데이터베이스 구조 설계</li>
          <li>PHP 기반 웹 서버 구축 및 프론트엔드 구현</li>
          <li>아두이노와 웹 서버 간 통신 로직 개발</li>
        </ul>
        <h1>💡 프로젝트를 통해 얻은 경험</h1>
        <ul>
          <li>
            팀원들이 로컬 MySQL 서버를 함께 사용하기 어려운 점을 해결하기 위해 <code>AWS RDS</code>
            를 도입하여 협업 환경을 개선했어요.
          </li>
          <li>
            아두이노가 데이터베이스와 직접 연결하는 데 한계가 있어, 웹 서버를 중계 서버로 활용하여{' '}
            <code>HTTP 통신 방식</code>을 통해 데이터 흐름을 설계했어요.
          </li>
          <li>
            아두이노가 서버와 연결되어, 문자열 내에서 원하는 정보를 <code>indexOf</code>와{' '}
            <code>substring</code>을 활용하여 추출하는 파싱 로직을 구현했어요.
          </li>
          <li>
            PHP의 <code>mysqli_connect</code>와 <code>MySQL_query</code>를 활용하여 안정적인 DB
            연결과 데이터 처리 방식에 대한 경험을 쌓았어요.
          </li>
        </ul>
      </>
    ),
  },
  {
    id: 'project-2',
    tags: ['C#', '사이드 프로젝트'],
    title: '커피 매장 관리(POS) 프로그램',
    subtitle: 'C# WinForm의 사용 경험과 숙련도를 높이기 위해 교육 과정 중 만든 4 인 프로젝트예요.',
    challenge: '처음으로 C#',
    date: '2022. 09. 19. - 2022. 09. 23.',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '주문 관리를 맡았어요.',

    children: (
      <>
        <h1>👥 팀원</h1>
        <ul>
          <li>주문 관리 1 인</li>
          <li>재고 관리 1 인</li>
          <li>유저 관리 1 인</li>
          <li>매출 관리 1 인</li>
        </ul>
        <h1>📌 주요 업무</h1>
        <ul>
          <li>MySQL 기반 데이터베이스(DB) 구조 설계</li>
          <li>주문 관리 기능 구현</li>
          <li>POS 프로그램과 DB 간의 데이터 연동 기능 개발</li>
          <li>팀원들의 코드를 통합하고 기능별 UI 요소 정리 및 최종 수정</li>
        </ul>
        <h1>💡 프로젝트를 통해 얻은 경험</h1>
        <ul>
          <li>
            프로그램을 재실행했을 때에도 데이터를 유지할 수 있도록 DB에 연동하여, 실시간으로
            데이터를 저장하고 조회할 수 있도록 했어요.
          </li>
          <li>
            <code>MySQL Workbench 8.0 CE</code>를 사용해 스키마와 테이블을 시각적으로 생성하고
            관리하며, SQL 문 없이도 데이터베이스를 효율적으로 운영할 수 있음을 경험했어요.
          </li>
          <li>
            팀원들과 함께 유사한 기능을 구현하게 되었는데, 서로 다른 방식(<code>ListBox</code>vs
            <code>DataGridView</code>)으로 구현했어요. 동일한 결과를 다양한 방법으로 도출할 수
            있다는 점이 인상 깊게 느껴졌어요. 이를 통해 다양한 UI 컴포넌트의 특성과 장단점을 비교할
            수 있는 기회가 됐어요.
          </li>
          <li>
            코드를 통합하는 과정에서는 UI와 기능의 일관성을 유지하기 위해 각각의 방식에 대해 분석할
            수 있었어요. 이를 통해 통합 개발과 협업의 중요성을 다시 한 번 느낄 수 있었어요.
          </li>
        </ul>
      </>
    ),
  },
  {
    id: 'project-1',
    tags: ['C++', '사이드 프로젝트'],
    title: 'DVD 관리 프로그램',
    subtitle: 'C++의 사용 경험과 숙련도를 높이기 위해 교육 과정 중 만든 3 인 프로젝트예요.',
    challenge: '처음으로 C++',
    date: '2022. 08. 24. - 2022. 08. 25.',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '메인 메뉴, 파일 입출력, 블랙리스트 관리를 맡았어요.',

    children: (
      <>
        <h1>👥 팀원</h1>
        <ul>
          <li>메인 메뉴, 파일 입출력, 블랙리스트 관리 1 인</li>
          <li>고객 관리 1 인</li>
          <li>DVD 관리 1 인</li>
        </ul>
        <h1>📌 주요 업무</h1>
        <ul>
          <li>프로그램의 메인 메뉴 UI 구현</li>
          <li>고객 목록, DVD 목록 등 주요 데이터를 텍스트 파일로 저장하는 입출력 기능 개발</li>
          <li>특정 고객을 블랙리스트로 등록하고 관리하는 기능 구현</li>
          <li>전체 코드 취합 및 함수명/구조 정리 등 통합 작업 담당</li>
        </ul>
        <h1>💡 프로젝트를 통해 얻은 경험</h1>
        <ul>
          <li>
            고객 정보, DVD 정보, 블랙리스트 등을 <code>구조체</code>를 통해 효율적으로 관리하며
            데이터 구조화의 중요성을 느꼈어요.
          </li>
          <li>
            <code>switch-case</code> 문과 <code>함수 포인터</code>를 활용하여 메뉴별 기능을
            처리하면서 C++ 활용에 익숙해지는 계기가 되었어요.
          </li>
          <li>
            각 기능은 개별 <code>.cpp 파일</code>로 나누어 작성하고, 공통 헤더 파일로 연결하여
            구조적이고 유지보수가 용이한 코드를 구현했어요.
          </li>
          <li>
            팀원들이 각각 개발한 기능을 통합하며, <code>함수명 및 변수명 규칙의 중요성</code>을
            느꼈어요. 초기에 설계 단계에서 명확한 네이밍 규칙을 정하지 않았어서, 함수 충돌과 코드
            이해의 어려움이 있었어요. 이를 해결하기 위해 전체 코드를 정리하며 일관된 네이밍 규칙을
            적용하려 노력했어요. 이 경험을 통해 협업에서 사전 기획과 코드 표준화의 필요성을 실감하게
            됐어요.
          </li>
        </ul>
      </>
    ),
  },
  {
    id: 'project-0',
    tags: ['C', '사이드 프로젝트'],
    title: '급여 관리 프로그램',
    subtitle: 'C 언어의 사용 경험과 숙련도를 높이기 위해 교육 과정 중 만든 프로젝트예요.',
    challenge: '처음으로 C',
    date: '2022. 06. 30. - 2022. 07. 01.',
    image: 'https://i.pinimg.com/736x/57/46/02/574602e6380306026f105ef0f587681f.jpg',
    links: [],
    libraries: [],
    role: '사이드 프로젝트로 전부 제가 진행하였어요.',

    children: (
      <>
        <h1>📌 주요 업무</h1>
        <ul>
          <li>
            사용자로부터 직원 정보를 입력받고, <code>q</code> 또는 <code>Q</code> 입력 시 종료되도록
            로직 구성
          </li>
          <li>
            입력된 정보를 바탕으로 직원 수, 최고 시급 직원의 이름 및 급여, 전체 급여 합산 출력
          </li>
          <li>결과 데이터를 텍스트 파일로 저장하여 데이터 보존 처리 구현</li>
        </ul>
        <h1>💡 프로젝트를 통해 얻은 경험</h1>
        <ul>
          <li>
            단순한 실습을 넘어 다양한 기능을 결합하여 하나의 프로그램을 완성하는 과정을 경험했어요.
          </li>
          <li>
            종료 조건을 구현하는 과정에서 <code>"q"</code>로 시작하는 이름도 프로그램을 종료시키는
            문제를 발견했고, <code>info[i].name[0] == 'q' && info[i].name[1] == '\0'</code>와 같은
            조건식을 통해 정확하게 처리하는 방법을 배웠어요.
          </li>
          <li>
            조건문 작성 중 <code>==</code>를 <code>=</code>로 잘못 작성하여 디버깅에 시간이 걸렸고,
            이를 통해 컴파일러가 감지할 수 있도록 == 비교 연산자의 피연산자 순서를 바꾸는 팁(
            <code>'q' == info[i].name[0]</code>)을 익혔어요.
          </li>
        </ul>
      </>
    ),
  },
]
