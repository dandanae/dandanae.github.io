import { Project } from './types'

export const Project006: Project = {
  id: 'project-006',
  tags: ['AWS(EC2)', '유지보수', '회사 프로젝트'],
  title: '사내 Rest API 유지보수',
  subtitle: '기존에 구축되어 있는 Rest API를 유지보수 및 추가 기능 개발을 맡았어요.',
  challenge: 'AWS(EC2)',
  date: '2023. 06 ~ 2025. 07',
  image: '',
  links: [{ title: 'PIE PARTNER', href: 'https://partner.pie.co.kr/' }],
  libraries: [],
  role: '유지보수 및 추가 기능 개발을 맡았어요.',

  content: (
    <>
      <h1>📌 주요 업무</h1>
      <h3>결과 페이지 비밀번호 기능 추가</h3>
      <ul>
        <li>
          기존에는 이메일로 송부한 주소에 접속하면 바로 확인할 수 있었는데, 고객의 요청에 따라
          패스워드를 생년월일로 설정하여 피부 정보가 담긴 페이지를 남이 열 수 없도록 기능을
          추가했어요.
        </li>
      </ul>
      <h3>자사 사이트 / 애플리케이션의 회원 탈퇴 기능 추가</h3>
      <ul>
        <li>
          함께 유지보수하고 있던 파트너 사이트 / 뷰티플레이스 애플리케이션의 회원 탈퇴 기능
          추가했어요.
        </li>
      </ul>
      <h3>자사 사이트의 아이템 그룹 복사 기능 추가</h3>
      <ul>
        <li>
          파트너사이트에서는 제품을 등록해서 그룹으로 묶을 수 있는 기능이 있는데, 고객의 요청에 따라
          이 그룹의 복사 기능을 추가했어요
        </li>
      </ul>
      <h1>💡 프로젝트를 통해 얻은 경험</h1>
      <h3>AWS EC2 접속 및 파일 전송 경험</h3>
      <ul>
        <li>
          개발 환경이 <code>AWS EC2</code> 기반이었기 때문에 서버에 파일을 전송하거나 수정하기 위해{' '}
          <code>WinSCP</code>를 사용했어요. 처음에는 보안 키 등을 설정하는 서버 접근 방식이 익숙하지
          않아 어려움이 있었지만, 점차 WinSCP와 EC2 키페어 설정 방식, 퍼미션 설정 등에 익숙해졌어요.
        </li>
      </ul>
      <h3>DBeaver를 통한 데이터베이스 접근 및 수정 경험</h3>
      <ul>
        <li>
          기존에 <code>MySQL Workbench 8.0 CE</code>를 이용한 경험이 있어 금방 익숙해졌어요. 실제
          회사에서 운영하는 DB의 데이터들이 어떻게 관리되는지 알 수 있었고, 데이터에 접근하고 쿼리를
          작성해 보며 SQL 구조에 대한 이해도를 높일 수 있었어요.
        </li>
      </ul>

      <h3>이미지 데이터를 S3에 업로드하고 경로를 연동</h3>
      <ul>
        <li>
          고객의 피부 사진 결과 데이터를 업로드하는 기능을 유지보수하면서 <code>AWS S3</code>를
          활용하게 되었고, 퍼블릭 접근 권한, 버킷 정책, 파일 경로 지정 방식 등을 새롭게 익혔어요.
        </li>
      </ul>

      <h3>결과 페이지에서 이미지 주소를 직접 노출하지 않도록 처리하는 로직</h3>
      <ul>
        <li>
          S3에 업로드된 이미지의 경로가 <code>bucket 이름</code>을 포함하여 노출되고 있었어요. php
          파일이라 따로 분리하기 어려워, 이를 직접 노출하지 않기 위해 <code>image.php</code> 파일을
          따로 만들어 로직을 분리했어요. 이 작업을 통해 보안을 강화하고, 사용자에게 안전하게
          데이터를 제공하는 방법을 익혔어요.
        </li>
      </ul>
      <h3>twig 사용 경험</h3>
      <ul>
        <li>
          프론트엔드 페이지는 <code>Twig</code>로 구현되어 있어, PHP 파일과 Twig 템플릿 엔진을 함께
          사용하는 방법을 배웠어요. 이를 통해 동적 페이지 렌더링과 템플릿 관리 방식을 익히고,
          효율적인 프론트엔드 개발에 대한 경험을 쌓을 수 있었어요.
        </li>
      </ul>
      <h1>🚀 주요 성과 및 효과</h1>
      <ul>
        <li>고객 요청 사항을 빠르게 반영함으로써 기업 신뢰도 향상 및 파트너 만족도 증가했어요.</li>
        <li>
          기존 API의 보안 강화 및 유지보수 편의성을 확보하여 장기적인 시스템 안정성 확보했어요.
        </li>
      </ul>
    </>
  ),
}
