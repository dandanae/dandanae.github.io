import { Project } from './types'

export const Project003: Project = {
  id: 'project-003',
  tags: ['C#', '사이드 프로젝트'],
  title: '커피 매장 관리(POS) 프로그램',
  subtitle: 'C# WinForm의 사용 경험과 숙련도를 높이기 위해 교육 과정 중 만든 4 인 프로젝트예요.',
  challenge: 'C#',
  date: '2022. 09. 19. - 2022. 09. 23.',
  image: '',
  links: [],
  libraries: [],
  role: '주문 관리를 맡았어요.',

  content: (
    <>
      <h1>👥 팀원</h1>
      <ul>
        <li>주문 관리 1 인</li>
        <li>재고 관리 1 인</li>
        <li>유저 관리 1 인</li>
        <li>매출 관리 1 인</li>
      </ul>
      <h1>📌 주요 업무</h1>
      <ul>
        <li>MySQL 기반 데이터베이스(DB) 구조 설계</li>
        <li>주문 관리 기능 구현</li>
        <li>POS 프로그램과 DB 간의 데이터 연동 기능 개발</li>
        <li>팀원들의 코드를 통합하고 기능별 UI 요소 정리 및 최종 수정</li>
      </ul>
      <h1>💡 프로젝트를 통해 얻은 경험</h1>
      <ul>
        <li>
          프로그램을 재실행했을 때에도 데이터를 유지할 수 있도록 DB에 연동하여, 실시간으로 데이터를
          저장하고 조회할 수 있도록 했어요.
        </li>
        <li>
          <code>MySQL Workbench 8.0 CE</code>를 사용해 스키마와 테이블을 시각적으로 생성하고
          관리하며, SQL 문 없이도 데이터베이스를 효율적으로 운영할 수 있음을 경험했어요.
        </li>
        <li>
          팀원들과 함께 유사한 기능을 구현하게 되었는데, 서로 다른 방식(<code>ListBox</code>vs
          <code>DataGridView</code>)으로 구현했어요. 동일한 결과를 다양한 방법으로 도출할 수 있다는
          점이 인상 깊게 느껴졌어요. 이를 통해 다양한 UI 컴포넌트의 특성과 장단점을 비교할 수 있는
          기회가 됐어요.
        </li>
        <li>
          코드를 통합하는 과정에서는 UI와 기능의 일관성을 유지하기 위해 각각의 방식에 대해 분석할 수
          있었어요. 이를 통해 통합 개발과 협업의 중요성을 다시 한 번 느낄 수 있었어요.
        </li>
      </ul>
    </>
  ),
}
